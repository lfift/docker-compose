version: "3"
services:
    etcd1:
        image: "quay.io/coreos/etcd:latest"
        entrypoint: /usr/local/bin/etcd
        command:
          - '--name=etcd1'
          - '--data-dir=/etcd_data'
          - '--initial-advertise-peer-urls=http://etcd1:2380'
          - '--listen-client-urls=http://0.0.0.0:2379'
          - '--listen-peer-urls=http://0.0.0.0:2380'
          - '--advertise-client-urls=http://etcd1:2379'
          - '--initial-cluster-token=ift'
          - '--heartbeat-interval=250'
          - '--election-timeout=1250'
          - '--initial-cluster=etcd1=http://etcd1:2380,etcd2=http://etcd2:2380,etcd3=http://etcd3:2380'
          - '--initial-cluster-state=new'
        ports:
          - 2379
        volumes:
          - ./store/etcd1/data:/etcd_data
        environment:
          - ETCDCTL_API=3
    etcd2:
        image: "quay.io/coreos/etcd:latest"
        entrypoint: /usr/local/bin/etcd
        command:
          - '--name=etcd2'
          - '--data-dir=/etcd_data'
          - '--initial-advertise-peer-urls=http://etcd2:2380'
          - '--listen-peer-urls=http://0.0.0.0:2380'
          - '--listen-client-urls=http://0.0.0.0:2379'
          - '--advertise-client-urls=http://etcd2:2379'
          - '--initial-cluster-token=ift'
          - '--heartbeat-interval=250'
          - '--election-timeout=1250'
          - '--initial-cluster=etcd1=http://etcd1:2380,etcd2=http://etcd2:2380,etcd3=http://etcd3:2380'
          - '--initial-cluster-state=new'
        ports:
          - 2379
        volumes:
          - ./store/etcd2/data:/etcd_data
        environment:
          - ETCDCTL_API=3
    etcd3:
        image: "quay.io/coreos/etcd:latest"
        entrypoint: /usr/local/bin/etcd
        command:
          - '--name=etcd3'
          - '--data-dir=/etcd_data'
          - '--initial-advertise-peer-urls=http://etcd3:2380'
          - '--listen-peer-urls=http://0.0.0.0:2380'
          - '--listen-client-urls=http://0.0.0.0:2379'
          - '--advertise-client-urls=http://etcd3:2379'
          - '--initial-cluster-token=ift'
          - '--heartbeat-interval=250'
          - '--election-timeout=1250'
          - '--initial-cluster=etcd1=http://etcd1:2380,etcd2=http://etcd2:2380,etcd3=http://etcd3:2380'
          - '--initial-cluster-state=new'
        ports:
          - 2379
        volumes:
          - ./store/etcd3/data:/etcd_data
        environment:
          - ETCDCTL_API=3
# starts 4 docker containers running minio server instances.
# using nginx reverse proxy, load balancing, you can access
# it through port 9000.
    minio1:
        image: minio/minio:RELEASE.2021-03-10T05-11-33Z
        volumes:
          - data1-1:/data1
          - data1-2:/data2
        expose:
          - "9000"
        environment:
          MINIO_ROOT_USER: minio
          MINIO_ROOT_PASSWORD: minio123
          MINIO_ETCD_ENDPOINTS: "http://etcd1:2379,http://etcd2:2379,http://etcd3:2379"
          MINIO_PUBLIC_IPS: "etcd1,etcd2,etcd3"
        command: server http://minio{1...4}/data{1...2}
        healthcheck:
          test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
          interval: 30s
          timeout: 20s
          retries: 3

    minio2:
        image: minio/minio:RELEASE.2021-03-10T05-11-33Z
        volumes:
          - data2-1:/data1
          - data2-2:/data2
        expose:
          - "9000"
        environment:
          MINIO_ROOT_USER: minio
          MINIO_ROOT_PASSWORD: minio123
          MINIO_ETCD_ENDPOINTS: "http://etcd1:2379,http://etcd2:2379,http://etcd3:2379"
          MINIO_PUBLIC_IPS: "etcd1,etcd2,etcd3"
        command: server http://minio{1...4}/data{1...2}
        healthcheck:
          test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
          interval: 30s
          timeout: 20s
          retries: 3
    minio3:
        image: minio/minio:RELEASE.2021-03-10T05-11-33Z
        volumes:
          - data3-1:/data1
          - data3-2:/data2
        expose:
          - "9000"
        environment:
          MINIO_ROOT_USER: minio
          MINIO_ROOT_PASSWORD: minio123
          MINIO_ETCD_ENDPOINTS: "http://etcd1:2379,http://etcd2:2379,http://etcd3:2379"
          MINIO_PUBLIC_IPS: "etcd1,etcd2,etcd3"
        command: server http://minio{1...4}/data{1...2}
        healthcheck:
          test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
          interval: 30s
          timeout: 20s
          retries: 3
    minio4:
        image: minio/minio:RELEASE.2021-03-10T05-11-33Z
        volumes:
          - data4-1:/data1
          - data4-2:/data2
        expose:
          - "9000"
        environment:
          MINIO_ROOT_USER: minio
          MINIO_ROOT_PASSWORD: minio123
          MINIO_ETCD_ENDPOINTS: "http://etcd1:2379,http://etcd2:2379,http://etcd3:2379"
          MINIO_PUBLIC_IPS: "etcd1,etcd2,etcd3"
        command: server http://minio{1...4}/data{1...2}
        healthcheck:
          test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
          interval: 30s
          timeout: 20s
          retries: 3
    nginx:
        image: nginx:1.19.2-alpine
        volumes:
          - ./nginx.conf:/etc/nginx/nginx.conf:ro
        ports:
          - "9000:9000"
        depends_on:
          - minio1
          - minio2
          - minio3
          - minio4

## By default this config uses default local driver,
## For custom volumes replace with volume driver configuration.
volumes:
  data1-1:
  data1-2:
  data2-1:
  data2-2:
  data3-1:
  data3-2:
  data4-1:
  data4-2:

